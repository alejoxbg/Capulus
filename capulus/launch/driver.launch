<?xml version="1.0"?>
<launch>
	<arg name="model" default="$(find capulus)/urdf/capulus.urdf"/>
	<arg name="gui" default="False" />
	<param name="robot_description" textfile="$(arg model)" />
	<param name="use_gui" value="$(arg gui)"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node name="rviz" pkg="rviz" type="rviz" args="$(find capulus)/rviz/confi.rviz" />

    <arg name="svo_file"             default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->
    <arg name="stream"               default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->

    <arg name="node_name"            default="zed_node" />
    <arg name="camera_model"         default="zed" /> <!-- 'zed' or 'zedm' -->
    <arg name="publish_urdf"         default="true" />

    <arg name="camera_name"          default="zed" />

    <arg name="base_frame"           default="base_link" />

    <arg name="cam_pos_x"             default="0.25" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->

    <group ns="$(arg camera_name)">
        <include file="$(find zed_wrapper)/launch/include/zed_camera.launch.xml">
            <arg name="camera_name"         value="$(arg camera_name)" />
            <arg name="svo_file"            value="$(arg svo_file)" />
            <arg name="stream"              value="$(arg stream)" />
            <arg name="node_name"           value="$(arg node_name)" />
            <arg name="camera_model"        value="$(arg camera_model)" />
            <arg name="base_frame"          value="$(arg base_frame)" />
            <arg name="publish_urdf"        value="$(arg publish_urdf)" />
            <arg name="cam_pos_x"           value="$(arg cam_pos_x)" />
            <arg name="cam_pos_y"           value="$(arg cam_pos_y)" />
            <arg name="cam_pos_z"           value="$(arg cam_pos_z)" />
            <arg name="cam_roll"            value="$(arg cam_roll)" />
            <arg name="cam_pitch"           value="$(arg cam_pitch)" />
            <arg name="cam_yaw"             value="$(arg cam_yaw)" />
        </include>
    </group>


  <arg name="razor_config_file" default="$(find razor_imu_9dof)/config/my_razor.yaml"/>
  <node pkg="razor_imu_9dof" type="imu_node.py" name="imu_node" output="screen">
  <!-- <node pkg="razor_imu_9dof" type="imu_node.py" name="imu_node" output="screen" respawn="true" respawn_delay="2"> -->
    <rosparam file="$(arg razor_config_file)" command="load"/>


</node>



  <rosparam command="load" file="$(find robot_localization)/params/dual_ekf_navsat_example.yaml" />

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true"/>



 <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

    <node pkg="diff_drive" type="capulus_teleop" name="capulus_teleop"  output="screen">
    </node>


    <arg name="name"            default="roboclaw"                  />
    <arg name="test_mode"       default="false"                     />
    <arg name="dev_names"       default="/dev/ttyACM0"              />
    <arg name="baud"            default="115200"                    />
    <arg name="address"         default="128"                       />
    <arg name="loop_hz"         default="10"                        />
    <arg name="deadman_secs"    default="100"                         />
    <arg name="speed_cmd_topic" default="$(arg name)/speed_command" />
    <arg name="stats_topic"     default="$(arg name)/stats"         />

    <node name="$(arg name)" pkg="roboclaw_driver" type="roboclaw_node.py">
        <param name="test_mode" type="bool" value="$(arg test_mode)" />
        <param name="dev_names" type="str" value="$(arg dev_names)" />
        <param name="baud" type="int" value="$(arg baud)" />
        <param name="address" type="int" value="$(arg address)" />
        <param name="loop_hz" type="int" value="$(arg loop_hz)" />
        <param name="deadman_secs" type="int" value="$(arg deadman_secs)" />
 
        <param name="speed_cmd_topic" type="str" value="$(arg speed_cmd_topic)" />
        <param name="stats_topic" type="str" value="$(arg stats_topic)" />
    </node>


</launch>
